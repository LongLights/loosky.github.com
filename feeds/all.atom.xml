<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Loosky's Blog</title><link href="http://loosky.com/" rel="alternate"></link><link href="http://loosky.com/feeds/all.atom.xml" rel="self"></link><id>http://loosky.com/</id><updated>2012-12-01T00:00:00+08:00</updated><entry><title>Mysql入门操作</title><link href="http://loosky.com/Technology/2012/12/01/mysql-tuition.html" rel="alternate"></link><updated>2012-12-01T00:00:00+08:00</updated><author><name>Loosky</name></author><id>tag:loosky.com,2012-12-01:Technology/2012/12/01/mysql-tuition.html</id><summary type="html">&lt;h3&gt;一、连接MySQL&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;格式： &lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;主机地址 &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;用户名 －&lt;span class="n"&gt;p&lt;/span&gt;用户密码
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;例1：连接到本机上的MySQL。 
   首先打开DOS窗口，然后进入mysql安装目录下的bin文件夹，再键入命令mysql -uroot -p，回车后提示你输密码，如果刚安装好MySQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是：MySQL&amp;gt; &lt;/li&gt;
&lt;li&gt;例2：连接到远程主机上的MySQL。假设远程主机的IP为：110.110.110.110，用户名为root,密码为123。则键入以下命令:mysql -h110.110.110.110 -uroot -p123 （注:u与root可以不用加空格，其它也一样） &lt;/li&gt;
&lt;li&gt;退出MySQL命令： exit （回车）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;二、修改密码。&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;格式：&lt;span class="n"&gt;mysqladmin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;用户名 &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;旧密码  &lt;span class="n"&gt;password&lt;/span&gt; 新密码
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;例1：给root加个密码ab12。首先在DOS下进入mysql安装目录下的bin文件夹，然后键入以下命令  mysqladmin -uroot -password 123  // 注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。 &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;例2：再将root的密码改为345&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysqladmin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;uroot&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p123&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; 345
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;三、增加新用户。（注意：和上面不同，下面的因为是MySQL环境中的命令，所以后面都带一个分号作为命令结束符）&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;格式：&lt;span class="n"&gt;grant&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; 数据库&lt;span class="o"&gt;.*&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; 用户名&lt;span class="p"&gt;@&lt;/span&gt;登录主机 &lt;span class="n"&gt;identified&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &amp;quot;密码&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;例1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。
首先用以root用户连入MySQL:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后键入以下命令： 
    grant select,insert,update,delete on &lt;em&gt;.&lt;/em&gt; to test1@"%" Identified by "abc"; &lt;/p&gt;
&lt;p&gt;但例1增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的MySQL数据库并对你的数据可以为所欲为了，解决办法见例2。 
2. 例2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机），这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MySQL主机上的web页来访问了。
    grant select,insert,update,delete on mydb.&lt;em&gt; to test2@localhost identified by "abc"; 
如果你不想test2有密码，可以再打一个命令将密码消掉。 
    grant select,insert,update,delete on mydb.&lt;/em&gt; to test2@localhost identified by "";  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;四、MYSQL中有关数据库方面的操作&lt;/h3&gt;
&lt;p&gt;（注意：你必须首先登录到MYSQL中，以下操作都是在MySQL的提示符下进行的，而且每个命令以分号结束。）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;操作技巧 &lt;/p&gt;
&lt;p&gt;(1)、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就OK。 &lt;/p&gt;
&lt;p&gt;(2)、你可以使用光标上下键调出以前的命令。这个以前的旧版本可能不支持。 
2. 显示命令 &lt;/p&gt;
&lt;p&gt;(1)显示数据库列表。 &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;databases&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;刚开始时才两个数据库：mysql和test。mysql库很重要它里面有MySQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。 
(2)显示库中的数据表： 
    use mysql；   ／／打开库 
    show tables; &lt;/p&gt;
&lt;p&gt;(3)显示数据表的结构： &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;describe&lt;/span&gt; 表名&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(4)建库： &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;database&lt;/span&gt; 库名&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(5)建表： &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;use&lt;/span&gt; 库名； 
&lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt; 表名 &lt;span class="p"&gt;(&lt;/span&gt;字段设定列表&lt;span class="p"&gt;)&lt;/span&gt;；
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(6)删库和删表: &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;drop&lt;/span&gt; &lt;span class="n"&gt;database&lt;/span&gt;  库名&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="n"&gt;drop&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;  表名；
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(7)将表中记录清空： &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; 表名&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(8)显示表中的记录： &lt;/p&gt;
&lt;p&gt;select * from 表名; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个建库和建表以及插入数据的实例 &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;drop&lt;/span&gt; &lt;span class="n"&gt;database&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt; &lt;span class="n"&gt;school&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;如果存在&lt;span class="n"&gt;SCHOOL&lt;/span&gt;则删除 
&lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;database&lt;/span&gt; &lt;span class="n"&gt;school&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="o"&gt;//&lt;/span&gt;建立库&lt;span class="n"&gt;SCHOOL&lt;/span&gt; 
&lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;school&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="o"&gt;//&lt;/span&gt;打开库&lt;span class="n"&gt;SCHOOL&lt;/span&gt; 
&lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt; &lt;span class="n"&gt;teacher&lt;/span&gt;   &lt;span class="o"&gt;//&lt;/span&gt;建立表&lt;span class="n"&gt;TEACHER&lt;/span&gt; 
&lt;span class="p"&gt;(&lt;/span&gt; 
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;3&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;auto_increment&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt; &lt;span class="n"&gt;primary&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;10&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;50&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;深圳&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; 
&lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="o"&gt;//&lt;/span&gt;建表结束 
&lt;span class="o"&gt;//&lt;/span&gt;以下为插入字段   
&lt;span class="n"&gt;insert&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;teacher&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;loosky&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;CSU&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;1976-10-10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="n"&gt;insert&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="n"&gt;teacher&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;jack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;CSU&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;1975-12-23&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注：在建表中 &lt;/p&gt;
&lt;p&gt;（1）将ID设为长度为3的数字字段:int(3)并让它每个记录自动加一:auto_increment并不能为空:not null而且让他成为主字段primary key&lt;/p&gt;
&lt;p&gt;（2）将NAME设为长度为10的字符字段 &lt;/p&gt;
&lt;p&gt;（3）将ADDRESS设为长度50的字符字段，而且缺省值为深圳。varchar和char有什么区别呢，只有等以后的文章再说了。 &lt;/p&gt;
&lt;p&gt;（4）将YEAR设为日期字段。 &lt;/p&gt;
&lt;p&gt;如果你在mysql提示符键入上面的命令也可以，但不方便调试。你可以将以上命令原样写入一个文本文件中假设为school.sql，然后复制到c:/下，并在DOS状态进入目录MySQLbin，然后键入以下命令： 
    mysql -uroot -p密码 &amp;lt; c:school.sql &lt;/p&gt;
&lt;p&gt;如果成功，空出一行无任何显示；如有错误，会有提示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将文本数据转到数据库中 
    (1)文本数据应符合的格式：字段数据之间用tab键隔开，null值用n来代替. &lt;/p&gt;
&lt;p&gt;例：3 rose CSU 1976-10-10 &lt;/p&gt;
&lt;p&gt;4 mike CSU 1975-12-23 &lt;/p&gt;
&lt;p&gt;(2)数据传入命令 load data local infile "文件名" into table 表名; &lt;/p&gt;
&lt;p&gt;注意：你最好将文件复制到MySQL/bin目录下，并且要先用use命令打表所在的库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备份数据库：（命令在DOS的MySQL/bin目录下执行） &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysqldump&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="n"&gt;school&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;school&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bbb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注释:将数据库school备份到school.bbb文件，school.bbb是一个文本文件，文件名任取，打开看看你会有新发现。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;五、“host is not allowed to connect to this mysql server”错误&lt;/h3&gt;
&lt;p&gt;在本地连本地的mysql server，一般都不会碰到"host is not allowed to connect to this mysql server"这样的错误，当远程连接mysql数据库时，就很可能出现这样的错误了。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;mysql是有权限限制的。查看到底用什么主机名，可以在MySQL Command Line中这样查看：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="o"&gt;//&lt;/span&gt;这样会列出数据库的用户及所使用的主机名
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;GRANT&lt;/span&gt; &lt;span class="n"&gt;SELECT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UPDATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DELETE&lt;/span&gt; &lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;db_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.*&lt;/span&gt; &lt;span class="n"&gt;TO&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;]@[&lt;/span&gt;&lt;span class="n"&gt;ipadd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;identified&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[password]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;db_name：要开发远程连接权限数据库名,不限制的话可为* &lt;/p&gt;
&lt;p&gt;username：连接所使用的用户名 &lt;/p&gt;
&lt;p&gt;ipadd：客户端所在主机的IP地址，如果要开放多个网段的链接，可以使用%作为通配符，例如，开一个一个C类网段的连接，可以使用'192.168.0.%'，地址两边的单引号是必须的。 
password：用户密码&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;grant&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="o"&gt;*.*&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ngi&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;identified&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看结果，执行：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以看到在user表中已有刚才创建的ngi用户。host字段表示登录的主机，其值可以用IP，也可用主机名，将host字段的值改为%就表示在任何客户端机器上能以ngi用户登录到mysql服务器，建议在开发时设为%。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ngi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;mysqladmin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;uroot&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p123&lt;/span&gt; &lt;span class="n"&gt;reload&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;mysqladmin&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;uroot&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p123&lt;/span&gt; &lt;span class="n"&gt;shutdown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Mysql"></category><category term="SQL"></category></entry><entry><title>在WordPress中使用Markdown语法</title><link href="http://loosky.com/Blog/2012/11/28/wordpress-markdown.html" rel="alternate"></link><updated>2012-11-28T00:00:00+08:00</updated><author><name>Loosky</name></author><id>tag:loosky.com,2012-11-28:Blog/2012/11/28/wordpress-markdown.html</id><summary type="html">&lt;p&gt;最近接触了一下Python，顺带接触了一下&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;，感觉还是挺好用的。于是基于&lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; 搭建了一个&lt;a href="http://loosky.com/"&gt;博客&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;个人感觉Markdown语法要比码html代码写东西强多了，不用再过多的去关注html排版等，英雄所见略同的&lt;a href="http://www.yangzhiping.com/tech/r-markdown-knitr.html"&gt;大有人在&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;可惜的是WordPress 官方目前没有提供 Markdown 支持，不过 WordPress 扩展性很强，有很多插件可以使用。我目前安装的是&lt;a href="http://wordpress.org/extend/plugins/wp-markdown/"&gt;WP-Markdown&lt;/a&gt; ,安装后就可以设置通过Markdown进行写作了，支持在文章、页面和评论中使用Markdown。&lt;/p&gt;
&lt;p&gt;&lt;img alt="WP-Markdown" src="http://loosky.net/Upload/2012/11/WP-Markdown.png" /&gt;&lt;/p&gt;
&lt;p&gt;目前使用的编辑器主要是&lt;a href="http://markdownpad.com/"&gt;MarkdownPad&lt;/a&gt;，推荐一试。&lt;/p&gt;
&lt;p&gt;附：&lt;a href="http://wowubuntu.com/markdown/"&gt;Markdown语法&lt;/a&gt;&lt;/p&gt;</summary><category term="WordPress"></category><category term="Markdown"></category><category term="Python"></category></entry><entry><title>GitHub使用</title><link href="http://loosky.com/Technology/2012/11/27/github.html" rel="alternate"></link><updated>2012-11-27T00:00:00+08:00</updated><author><name>Loosky</name></author><id>tag:loosky.com,2012-11-27:Technology/2012/11/27/github.html</id><summary type="html">&lt;h3&gt;一、创建github账号&lt;/h3&gt;
&lt;p&gt;github是一个类似sf的免费项目管理及分享的服务平台，要想使用github提供的服务，你必须先注册成为github注册用户。github的网址是：&lt;a href="https://github.com"&gt;https://github.com&lt;/a&gt;
帐号注册成功后，点击&lt;strong&gt;New Repository&lt;/strong&gt;，开始创建新版本库。用户可以创建类似于 &lt;code&gt;your_userid.github.com&lt;/code&gt; 的版本库，这样就可以通过&lt;code&gt;http://your_userid.github.com&lt;/code&gt;进行访问了。&lt;/p&gt;
&lt;h3&gt;二、建立本地git仓库&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#git config --global user.name &amp;quot;your_userid&amp;quot;   //提供使用者自己的身份标识&lt;/span&gt;
&lt;span class="c"&gt;#git config --global user.email &amp;quot;your_email&amp;quot;    &lt;/span&gt;
&lt;span class="c"&gt;#mkdir -p /home/work/your_userid.github.com   //建立项目&lt;/span&gt;
&lt;span class="c"&gt;#cd /home/work/your_userid.github.com&lt;/span&gt;
&lt;span class="c"&gt;#git init                                     //初始化git仓库&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;三、创建项目文件&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#touch README&lt;/span&gt;
&lt;span class="c"&gt;#git add README&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果添加项目目录下面所有的文件则用 &lt;strong&gt;git add .&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;四、将项目提交到github管理&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建SSH密钥&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#ssh-keygen -C &amp;#39;your_email&amp;#39; -t rsa&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到刚才生成的密钥（默认为&lt;strong&gt;/root/.ssh/id_rsa.pub&lt;/strong&gt;）文件并用文本编辑器打开，然后复制里面的内容。接着转到github站点，进入&lt;strong&gt;Account Setting--SSH Keys&lt;/strong&gt; 选项后，点击&lt;strong&gt;add ssh key&lt;/strong&gt; 并将刚才复制的内容粘贴保存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试SSH连接。在git bash中执行以下命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#ssh -v git@github.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果出现类似 &lt;code&gt;Hi loosky! You've successfully authenticated, but GitHub does not provide shell access.&lt;/code&gt; 的提示，则证明SSH连接工作正常了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提交项目&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#git commit -m &amp;#39;first commit&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加远程仓库&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#git remote add origin https://github.com/your_userid/your_userid.github.com.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个只是第一次操作的时候需要，后面再次进行项目提交时，并不需要重复这个操作。&lt;/p&gt;
&lt;p&gt;如果出现：error: The requested URL returned error: 403 while accessing ... 的错误，可以编辑.git/config&lt;/p&gt;
&lt;p&gt;将url=https://github.com/your_userid/your_userid.github.com.git 改为 url=ssh://git@github.com/your_userid/your_userid.github.com.git&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;push 到 GitCafe 仓库&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#git push origin master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果出现：error: failed to push some refs to 'ssh://git@github.com/your_userid/your_userid.github.com.git' To prevent you from losing history, non-fast-forward updates were rejected Merge the remote changes before pushing again.  See the 'Note about fast-forwards' section of 'git push --help' for details.&lt;/p&gt;
&lt;p&gt;解决办法：git push origin +master&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;push 完成以后就可以在访问 GitCafe Pages 地址了。&lt;a href="http://your_userid.github.com"&gt;http://your_userid.github.com&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;删除git文件&lt;/h3&gt;
&lt;p&gt;项目中，在本地删除了一些文件后，如果也删除远程服务器上的文件？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;查看本地已经删除的文件&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# git status   //可以看到我们删除的哪些文件&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从当前的工作目录中和索引中删除文件&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#git rm –r * （进入某个目录中，执行此语句，会删除该目录下的所有文件和子目录） &lt;/span&gt;
&lt;span class="c"&gt;#git rm f1    (删除文件f1，包含本地目录和index中的此文件记录) &lt;/span&gt;
&lt;span class="c"&gt;#git rm --ached f1 (删除文件f1，不会删除本地目录文件，只删除index中的文件记录；将已经git add的文件remove到cache中,这样commit的时候不会提交这个文件, 适用于一下子添加了很多文件, 却又想排除其中个别几个文件的情况.)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照上面的方法重新提交。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;自动发布&lt;/h3&gt;
&lt;p&gt;为了方便下次发布，可以创建了自动发布的脚本publish&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#cd /home/work&lt;/span&gt;
&lt;span class="c"&gt;#vi publish&lt;/span&gt;

&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;your_userid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Update&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;参考&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/set-up-git#platform-linux"&gt;Set Up Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/create-a-repo"&gt;Create A Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://artori.us/git-github-usage/"&gt;Git/Github使用方法小记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hi.baidu.com/mcspring/item/198f1e977f8f98bccd80e5b3"&gt;windows下使用git管理github项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yangzhiping.com/tech/github.html"&gt;如何高效利用GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.worldhello.net/gotgithub/index.html"&gt;GotGitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/7438313/pushing-to-git-returning-error-code-403-fatal-http-request-failed"&gt;Pushing to Git returning Error Code 403 fatal: HTTP request failed&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="git"></category><category term="github"></category></entry><entry><title>Hello World!</title><link href="http://loosky.com/Blog/2012/11/26/helloworld.html" rel="alternate"></link><updated>2012-11-26T00:00:00+08:00</updated><author><name>Loosky</name></author><id>tag:loosky.com,2012-11-26:Blog/2012/11/26/helloworld.html</id><summary type="html">&lt;p&gt;这是Loosky的个人博客，网站基于&lt;a href="http://getpelican.com/"&gt;Pelican&lt;/a&gt; &amp;amp; &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;搭建，使用了&lt;a href="http://www.python.org/"&gt;Python&lt;/a&gt;技术。一切从零开始。&lt;/p&gt;
&lt;p&gt;您可以访问我的&lt;a href="http://loosky.net"&gt;另外一个博客&lt;/a&gt;,那里记录了从2003年以来的所有文章，包含技术、情感、生活等方面。&lt;/p&gt;</summary><category term="Loosky"></category><category term="Python"></category><category term="github"></category><category term="Pelican"></category></entry></feed>